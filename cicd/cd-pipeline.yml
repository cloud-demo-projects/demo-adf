trigger: none

pool:
    vmImage: 'windows-latest'

parameters:
  - name: Environment
    displayName: 'Environment'
    type: string
    default: d
    values:
      - d
      - t
      - a
      - p

  - name: deployLinkedServices
    default: false
    displayName: 'deploy LinkedServices to ADF instance'
    values:
    - true
    - false

  - name: disableTriggers
    default: false
    displayName: 'disable all triggers to running state'
    values:
    - true
    - false

  - name: deploydatasetpipelinedefn
    default: false
    displayName: 'deploy dataset, pipeline and trigger definitions to ADF instance'
    values:
    - true
    - false

  - name: enabletriggers
    default: false
    displayName: 'enable all triggers to running state'
    values:
    - true
    - false

variables:
- template: ../conf/${{ parameters.environment }}/variables.yml

stages:
  - stage: LinkedService_Deploy
    displayName: LinkedService_Deploy
    condition: eq('${{ parameters.deployLinkedServices }}', true)
    jobs:
      - job: LinkedService_Deploy
        displayName: Deploy LinkedServices to ADF instance
        steps:
         - task: DownloadBuildArtifacts@1
           displayName: Download Build Artifacts to the Pipeline
           inputs:
             buildType: 'specific'
             project: '$(buildProjID)'
             pipeline: '$(adfbuildid)'
             buildVersionToDownload: 'latest'
             downloadType: 'single'
             artifactName: '$(adfArtifactName)'
             downloadPath: '$(Pipeline.Workspace)/drop'

         - task: qetza.replacetokens.replacetokens-task.replacetokens@5
           displayName: Replace Tokens with values from variable groups
           inputs:
             rootDirectory: '$(Pipeline.Workspace)/drop'
             targetFiles: '**/*.json'
             encoding: 'auto'
             tokenPattern: 'default'
             writeBOM: true
             actionOnMissing: 'continue'
             keepToken: false
             actionOnNoFiles: 'continue'
             enableTransforms: false
             enableRecursion: false
             useLegacyPattern: false
             enableTelemetry: true

         - task: deploy-adf-json@2
           displayName: Deploy Blob and FileShare LinkedService to ADF
           inputs:
            azureSubscription: '$(azureServiceConnection)'
            resourceGroupName: '$(resourceGroupName)'
            dataFactoryName: '$(FactoryName)'
            ServicePath: '$(Pipeline.Workspace)/drop/$(adfArtifactName)/adf-resources/linkedService/'
            Sorting: 'ascending'

  - stage: disable_Triggers
    displayName: disable_Triggers
    condition: eq('${{ parameters.disableTriggers }}', true)
    jobs:
      - job: disableTriggers
        steps:
          - task: AzurePowerShell@5
            displayName: disableTriggers
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              ScriptType: 'InlineScript'
              Inline: |
                $triggersADF = Get-AzDataFactoryV2Trigger -DataFactoryName $(ADFName) -ResourceGroupName $(resourceGroupName)
                $triggersADF | ForEach-Object { Stop-AzDataFactoryV2Trigger -ResourceGroupName $(resourceGroupName) -DataFactoryName $(FactoryName) -Name $_.name -Force }
              azurePowerShellVersion: 'LatestVersion'

  - stage: DataSet_Pipeline_Trigger_Deploy
    displayName: DataSet_Pipeline_Trigger_Deploy
    condition: eq('${{ parameters.deploydatasetpipelinedefn }}', true)
    jobs:
      - job: DataSet_Pipeline_Trigger_Deploy
        displayName: Deploy DataSet and Pipeline and Trigger Definitions to ADF instance
        steps:
         - task: DownloadBuildArtifacts@1
           displayName: Download Build Artifacts to the Pipeline
           inputs:
             buildType: 'specific'
             project: '$(buildProjID)'
             pipeline: '$(adfbuildid)'
             buildVersionToDownload: 'latest'
             tags: 'demo-adf-build'
             downloadType: 'single'
             artifactName: '$(adfArtifactName)'
             downloadPath: '$(Pipeline.Workspace)/drop'

         - task: qetza.replacetokens.replacetokens-task.replacetokens@5
           displayName: Replace Tokens with values from variable groups
           inputs:
             rootDirectory: '$(Pipeline.Workspace)/drop'
             targetFiles: '**/*.json'
             encoding: 'auto'
             tokenPattern: 'default'
             writeBOM: true
             actionOnMissing: 'continue'
             keepToken: false
             actionOnNoFiles: 'continue'
             enableTransforms: false
             enableRecursion: false
             useLegacyPattern: false
             enableTelemetry: true

         - task: deploy-adf-json@2
           displayName: Deploy dataset and pipeline definitions and Triggers  to ADF
           inputs:
            azureSubscription: '$(azureServiceConnection)'
            resourceGroupName: '$(resourceGroupName)'
            dataFactoryName: '$(FactoryName)'
            DatasetPath: '$(Pipeline.Workspace)/drop/$(adfArtifactName)/adf-resources/dataset/'
            PipelinePath: '$(Pipeline.Workspace)/drop/$(adfArtifactName)/adf-resources/pipeline/'
            TriggerPath: '$(Pipeline.Workspace)/drop/$(adfArtifactName)/adf-resources/trigger/'
            Sorting: 'ascending'

  - stage: Enable_Triggers
    displayName: Enable_Triggers
    condition: eq('${{ parameters.enabletriggers }}', true)
    jobs:
      - job: Enable_Triggers
        steps:
          - task: AzurePowerShell@5
            displayName: Enable_Triggers
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              ScriptType: 'InlineScript'
              Inline: |
                $triggersADF = Get-AzDataFactoryV2Trigger -DataFactoryName $(FactoryName) -ResourceGroupName $(resourceGroupName)
                $triggersADF | ForEach-Object { Start-AzDataFactoryV2Trigger -ResourceGroupName $(resourceGroupName) -DataFactoryName $(FactoryName) -Name $_.name -Force }
              azurePowerShellVersion: 'LatestVersion'
